
R version 2.12.0 (2010-10-15)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #
> # Make sure that the newdata argument works for various
> #   predictions
> # We purposely use a subset of the lung data that has only some
> #   of the levels of the ph.ecog
> library(survival)
Loading required package: splines
> options(na.action=na.exclude, contrasts=c('contr.treatment', 'contr.poly'))
> aeq <- function(x,y) all.equal(as.vector(x), as.vector(y))
> 
> myfit <- coxph(Surv(time, status) ~ age + factor(ph.ecog) + strata(sex), lung)
> 
> keep <- which(lung$sex==1 & (lung$ph.ecog==1 | lung$ph.ecog==2))
> p1 <- predict(myfit, type='lp')
> p2 <- predict(myfit, type="lp", newdata=lung[keep,])
> p3 <- predict(myfit, type='lp', se.fit=TRUE)
> p4 <- predict(myfit, type="lp", newdata=lung[keep,], se.fit=TRUE)
> aeq(p1[keep], p2)
[1] TRUE
> aeq(p1, p3$fit)
[1] TRUE
> aeq(p1[keep], p4$fit)
[1] TRUE
> aeq(p3$se.fit[keep], p4$se.fit)
[1] TRUE
> 
> p1 <- predict(myfit, type='risk')
> p2 <- predict(myfit, type="risk", newdata=lung[keep,])
> p3 <- predict(myfit, type='risk', se.fit=TRUE)
> p4 <- predict(myfit, type="risk", newdata=lung[keep,], se.fit=TRUE)
> aeq(p1[keep], p2)
[1] TRUE
> aeq(p1, p3$fit)
[1] TRUE
> aeq(p1[keep], p4$fit)
[1] TRUE
> aeq(p3$se.fit[keep], p4$se.fit)
[1] TRUE
> 
> p1 <- predict(myfit, type='expected')
> p2 <- predict(myfit, type="expected", newdata=lung[keep,])
> p3 <- predict(myfit, type='expected', se.fit=TRUE)
> p4 <- predict(myfit, type="expected", newdata=lung[keep,], se.fit=TRUE)
> aeq(p1[keep], p2)
[1] "Numeric: lengths (100, 227) differ"
> aeq(p1, p3$fit)
[1] TRUE
> aeq(p1[keep], p4$fit)
[1] "Numeric: lengths (100, 227) differ"
> aeq(p3$se.fit[keep], p4$se.fit)
[1] "Numeric: lengths (100, 227) differ"
> 
> p1 <- predict(myfit, type='terms')
> p2 <- predict(myfit, type="terms",newdata=lung[keep,])
> p3 <- predict(myfit, type='terms', se.fit=T)
> p4 <- predict(myfit, type="terms",newdata=lung[keep,], se.fit=T)
> aeq(p1[keep,], p2)
[1] TRUE
> aeq(p1, p3$fit)
[1] TRUE
> aeq(p1[keep,], p4$fit)
[1] TRUE
> aeq(p3$se.fit[keep,], p4$se.fit)
[1] TRUE
> 
> 
