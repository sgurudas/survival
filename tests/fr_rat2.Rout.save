
R version 2.7.1 (2008-06-23)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> options(na.action=na.exclude) # preserve missings
> options(contrasts=c('contr.treatment', 'contr.poly')) #ensure constrast type
> library(survival)
Loading required package: splines
> 
> # From Gail, Sautner and Brown, Biometrics 36, 255-66, 1980
> 
> # 48 rats were injected with a carcinogen, and then randomized to either
> # drug or placebo.  The number of tumors ranges from 0 to 13; all rats were
> # censored at 6 months after randomization.
> 
> # Variables: rat, treatment (1=drug, 0=control), o
> # 	   observation # within rat,
> #	   (start, stop] status
> # The raw data has some intervals of zero length, i.e., start==stop.
> #  We add .1 to these times as an approximate solution
> #
> rat2 <- read.table('data.rat2', col.names=c('id', 'rx', 'enum', 'start',
+ 				  'stop', 'status'))
> temp1 <- rat2$start
> temp2 <- rat2$stop
> for (i in 1:nrow(rat2)) {
+     if (temp1[i] == temp2[i]) {
+ 	temp2[i] <- temp2[i] + .1
+ 	if (i < nrow(rat2) && rat2$id[i] == rat2$id[i+1]) {
+ 	    temp1[i+1] <- temp1[i+1] + .1
+ 	    if (temp2[i+1] <= temp1[i+1]) temp2[i+1] <- temp1[i+1]
+ 	    }
+         }
+     }
> rat2$start <- temp1
> rat2$stop  <- temp2
> 
> r2fit0 <- coxph(Surv(start, stop, status) ~ rx + cluster(id), rat2)
> 
> r2fitg <-  coxph(Surv(start, stop, status) ~ rx + frailty(id), rat2)
> r2fitm <-  coxph(Surv(start, stop, status) ~ rx + frailty.gaussian(id), rat2)
> 
> r2fit0
Call:
coxph(formula = Surv(start, stop, status) ~ rx + cluster(id), 
    data = rat2)


     coef exp(coef) se(coef) robust se     z       p
rx -0.827     0.438    0.151     0.204 -4.05 5.2e-05

Likelihood ratio test=32.9  on 1 df, p=9.9e-09  n= 253 
> r2fitg
Call:
coxph(formula = Surv(start, stop, status) ~ rx + frailty(id), 
    data = rat2)

            coef   se(coef) se2   Chisq DF   p      
rx          -0.838 0.219    0.152 14.6   1.0 0.00013
frailty(id)                       57.3  26.4 0.00045

Iterations: 7 outer, 21 Newton-Raphson
     Variance of random effect= 0.317   I-likelihood = -779.1 
Degrees of freedom for terms=  0.5 26.3 
Likelihood ratio test=120  on 26.8 df, p=8.43e-14  n= 253 
> r2fitm
Call:
coxph(formula = Surv(start, stop, status) ~ rx + frailty.gaussian(id), 
    data = rat2)

                     coef  se(coef) se2   Chisq DF   p      
rx                   -0.79 0.220    0.154 12.9   1.0 3.3e-04
frailty.gaussian(id)                      61.0  24.9 7.3e-05

Iterations: 5 outer, 17 Newton-Raphson
     Variance of random effect= 0.303 
Degrees of freedom for terms=  0.5 24.9 
Likelihood ratio test=118  on 25.4 df, p=7e-14  n= 253 
> 
> #This example is unusual: the frailties variances end up about the same,
> #  but the effect on rx differs.  Double check it
> # Because of different iteration paths, the coef won't be exactly the
> #     same, but darn close.
> 
> temp <- coxph(Surv(start, stop, status) ~ rx + offset(r2fitm$frail[id]), rat2)
> all.equal(temp$coef, r2fitm$coef[1])
[1] TRUE
> 
> temp <- coxph(Surv(start, stop, status) ~ rx + offset(r2fitg$frail[id]), rat2)
> all.equal(temp$coef, r2fitg$coef[1])
[1] TRUE
> 
> #
> # What do I get with AIC
> #
> r2fita1 <- coxph(Surv(start, stop, status) ~ rx + frailty(id, method='aic'),
+ 		 rat2)
> r2fita2 <- coxph(Surv(start, stop, status) ~ rx + frailty(id, method='aic',
+ 							  dist='gauss'), rat2)
> r2fita3 <- coxph(Surv(start, stop, status) ~ rx + frailty(id, dist='t'),
+ 		 rat2)
> 
> r2fita1
Call:
coxph(formula = Surv(start, stop, status) ~ rx + frailty(id, 
    method = "aic"), data = rat2)

                          coef   se(coef) se2   Chisq DF   p      
rx                        -0.838 0.230    0.151 13.3   1.0 0.00026
frailty(id, method = "aic                       60.4  28.2 0.00039

Iterations: 10 outer, 25 Newton-Raphson
     Variance of random effect= 0.375   I-likelihood = -779.2 
Degrees of freedom for terms=  0.4 28.2 
Likelihood ratio test=124  on 28.6 df, p=7.92e-14  n= 253 
> r2fita2
Call:
coxph(formula = Surv(start, stop, status) ~ rx + frailty(id, 
    method = "aic", dist = "gauss"), data = rat2)

                          coef   se(coef) se2   Chisq DF   p      
rx                        -0.784 0.255    0.154  9.48  1.0 2.1e-03
frailty(id, method = "aic                       73.40 29.7 1.4e-05

Iterations: 6 outer, 18 Newton-Raphson
     Variance of random effect= 0.493 
Degrees of freedom for terms=  0.4 29.7 
Likelihood ratio test=127  on 30 df, p=6.02e-14  n= 253 
> r2fita3
Call:
coxph(formula = Surv(start, stop, status) ~ rx + frailty(id, 
    dist = "t"), data = rat2)

                        coef  se(coef) se2   Chisq DF p      
rx                      -0.79 0.254    0.157  9.67  1 0.00190
frailty(id, dist = "t")                      64.70 30 0.00024

Iterations: 7 outer, 23 Newton-Raphson
     Variance of random effect= 0.779 
Degrees of freedom for terms=  0.4 30.0 
Likelihood ratio test=126  on 30.4 df, p=1.39e-13  n= 253 
> 
